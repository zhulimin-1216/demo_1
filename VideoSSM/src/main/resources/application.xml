<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 告诉Spring扫描哪些包,以及子包下的类 -->
	<context:component-scan base-package="com.zhiyou" />
	<!-- 1:加载属性文件到这里面 -->
	<util:properties id="db" location="classpath:db.properties" />
	<!-- 2:配置数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 3：通过set注入将数据库连接信息注入到类的实例对象中 -->
		<property name="driverClassName" value="#{db.driver}" />
		<property name="url" value="#{db.url}" />
		<property name="username" value="#{db.username}" />
		<property name="password" value="#{db.password}" />
	</bean>
	<!-- 4:配置sqlsession工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:MyBatisConfig.xml" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 5:配置接口扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zhiyou.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 开启SpringMVC的注解驱动 -->
	<mvc:annotation-driven />
	<!-- 指定SpringMVC扫描注解的路径 -->
	<context:component-scan base-package="com.zhiyou.controller" />
	<!-- 开启静态资源的支持 -->
	<mvc:default-servlet-handler />
	<!-- 视图解析器 :可以给我们返回的视图自动添加前缀,后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 给视图添加一个后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 管理员和用户拦截器 -->
		<!-- <mvc:interceptor>
			拦截管理员资源的访问
			<mvc:mapping path="/*" />
			放行我们一开始就需要访问的：登录的请求以及登录页面的请求，js和css
			<mvc:exclude-mapping path="adminLogin.do" />
			<mvc:exclude-mapping path="userLogin" />
			<mvc:exclude-mapping path="/static/*" />
			指定我们所使用的拦截器
			<bean class="com.zhiyou.interceptor.AdminInterceptor" />
		</mvc:interceptor>  -->
		<!-- 用户拦截器 -->
		<mvc:interceptor>
			<!-- 用户资源的访问 -->
			<mvc:mapping path="/*" />
			<!-- 放行我们一开始就需要访问的：登录的请求以及登录页面的请求，js和css -->
			<mvc:exclude-mapping path="/userLogin" />
			<mvc:exclude-mapping path="/adminLogin.do" />
			<mvc:exclude-mapping path="/static/*" />
			<mvc:exclude-mapping path="/static/*" />
			<!-- 指定我们所使用的拦截器 -->
			<bean class="com.zhiyou.interceptor.UserInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.zhiyou.interceptor.FileInterceptor">
				<property name="maxSize" value="#{1024*1024*100}" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 配置文件上传 要求id固定 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 配置文件上传的大小（最大） -->
		<property name="maxUploadSize" value="#{1024*1024*100}" />
		<!-- 读取文件的速度 -->
		<property name="maxInMemorySize" value="4096" />
		<!-- 指定编码格式 -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- 配置redis -->
	<!-- 引入属性文件 -->
	<util:properties id="redis" location="classpath:redis.properties"/>
	<!-- 2:配置redis pool -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="#{redis.maxIdle}"/>
		<property name="maxTotal" value="#{redis.maxTotal}"/>
	</bean>
     <!-- 3:配置redis连接 -->
     <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
     	<property name="hostName" value="#{redis.host}"/>
     	<property name="port" value="#{redis.port}"/>
     	<property name="password" value="#{redis.password}"/>
     	<property name="poolConfig" ref="jedisPoolConfig"/>
     </bean>
	<bean class="com.zhiyou.redis.ReidsUtil"> 
		<property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>
	</bean>
</beans>